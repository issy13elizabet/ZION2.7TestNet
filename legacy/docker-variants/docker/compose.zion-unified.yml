version: "3.8"

services:
  # ZION Unified Core - All-in-One (replaces seed1, rpc-shim, mining pool)
  zion-unified:
    build:
      context: ..
      dockerfile: docker/Dockerfile.zion-unified
    image: zion:unified
    container_name: zion-unified
    restart: unless-stopped
    environment:
      # Core configuration
      - NODE_ENV=production
      - PORT=8888
      - ZION_MODE=unified
      - ZION_LOG_LEVEL=debug
      
      # Mining pool configuration
      - ZION_POOL_ADDRESS=Z3222ywic7fGUZHv9EfFwEKf1VJRrEqPbLrHgRiBb43LWaS1Cz2gVwgdF2kvUPsGb9jSvUUf31oNCSZgNEtUiGDT4sBLtXmGzc
      
      # Database configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      
      # Bootstrap mode for testing
      - ZION_BOOTSTRAP_MODE=true
    ports:
      - "3333:3333"     # Mining pool (Stratum)
      - "18080:18080"   # P2P network
      - "18081:18081"   # RPC daemon (replaces rpc-shim)
      - "8888:8888"     # Core API & WebUI
      - "9735:9735"     # Lightning Network (optional)
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - zion-unified
    volumes:
      - zion_unified_data:/app/data
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Redis (shared database)
  redis:
    image: redis:6-alpine
    container_name: zion-redis-unified
    restart: unless-stopped
    networks:
      - zion-unified
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"

networks:
  zion-unified:
    driver: bridge
    name: zion-unified

volumes:
  zion_unified_data:
    name: zion_unified_data